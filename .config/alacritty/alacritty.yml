# Configuration for Alacritty, the GPU enhanced terminal emulator.

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty itself.
env:
  TERM: xterm-256color

window:
  dimensions:
    columns: 0
    lines: 0
  position:
    x: 0
    y: 0
  padding:
    x: 6
    y: 6
  # Spread additional padding evenly around the terminal content.
  dynamic_padding: false
  title: Alacritty
  class:
    instance: Alacritty
    general: Alacritty

  # GTK theme variant (Linux/BSD only)
  #
  # Override the variant of the GTK theme. Commonly supported values are `dark` and `light`.
  # Set this to `None` to use the default theme variant.
  #gtk_theme_variant: None

scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  history: 5000

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  #multiplier: 3

  # Scroll to the bottom when new text is written to the terminal.
  #auto_scroll: false

# Spaces per Tab (changes require restart)
#
# This setting defines the width of a tab in cells.
#
# Some applications, like Emacs, rely on knowing about the width of a tab.
# To prevent unexpected behavior in these applications, it's also required to
# change the `it` value in terminfo when altering this setting.
#
#tabspaces: 4


# Font configuration
font:
  normal:
    family: Fira Code
    style: Regular
  bold:
    # family: UbuntuMono Nerd Font
    family: Fira Code
    style: Bold
  italic:
    # family: UbuntuMono Nerd Font
    family: Fira Code
    style: Italic
  bold_italic:
    # family: UbuntuMono Nerd Font

    style: Bold Italic
  size: 11.0
  offset:
    x: 0
    y: 1
   
    
# Colors (Konsole's Dark Pastels)
colors:
  primary:
    background: '0x262626'
    foreground: '0x8E8E8E'

  normal:
    black:   '0x3F3F3F'
    red:     '0xDA5555'
    green:   '0x82A85C'
    yellow:  '0xDFAF8F'
    blue:    '0x81A6CC'
    magenta: '0xDC8CC3'
    cyan:    '0x8CD0D3'
    white:   '0xDCDCCC'

  bright:
    black:   '0x709080'
    red:     '0xDCA3A3'
    green:   '0x72D5A3'
    yellow:  '0xF0DFAF'
    blue:    '0x94BFF3'
    magenta: '0xEC93D3'
    cyan:    '0x93E0E3'
    white:   '0xFFFFFF'

  # Cursor colors : if unset -> inverse of the cell color
  #cursors:
  #  text: '0x000000'
  #  cursor: '0xffffff'

  # Selection colors : if unset -> inverse of the cell color
  selection:
    text: '0xbbc2cf'
    background: '0x282c34'

background_opacity: 0.95



# Mouse bindings
# Mouse bindings are specified as a list of objects, much like the key
# bindings further below.
#
# Each mouse binding will specify a:
#
# - `mouse`:
#
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# - `action` (see key bindings)
#
# And optionally:
#
# - `mods` (see key bindings)

#mouse_bindings:
#  - { mouse: Middle, action: PasteSelection }



# Key bindings
# Key bindings are specified as a list of objects. For example, this is the
# default paste binding:
#
# `- { key: V, mods: Control|Shift, action: Paste }`
#
# Each key binding will specify a:
#
# - `key`: Identifier of the key pressed
#
#    - A-Z
#    - F1-F24
#    - Key0-Key9
#
# - `action`: Execute a predefined action
#
#   - Copy
#   - Paste
#   - PasteSelection
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Minimize
#   - Quit
#   - ToggleFullscreen
#   - SpawnNewInstance
#   - ClearLogNotice
#   - ReceiveChar
#   - None
#
# And optionally:
#
# - `mods`: Key modifiers to filter binding actions
#
#    - Command
#    - Control
#    - Option
#    - Super
#    - Shift
#    - Alt
#
#    Multiple `mods` can be combined using `|` like this:
#       `mods: Control|Shift`.
#    Whitespace and capitalization are relevant and must match the example.
#
# - `mode`: Indicate a binding for only specific terminal reported modes
#
#    This is mainly used to send applications the correct escape sequences
#    when in different modes.
#
#    - AppCursor
#    - AppKeypad
#    - Alt
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.

key_bindings:
  - { key: V,        mods: Control|Shift, action: Paste            }
  - { key: C,        mods: Control|Shift, action: Copy             }
  - { key: N,        mods: Control|Shift, action: SpawnNewInstance }
  - { key: Insert,   mods: Shift,         action: PasteSelection   }
  - { key: Key0,     mods: Control,       action: ResetFontSize    }
  - { key: Equals,   mods: Control,       action: IncreaseFontSize }
  - { key: Plus,     mods: Control,       action: IncreaseFontSize }
  - { key: Minus,    mods: Control,       action: DecreaseFontSize }

  - { key: Paste,                    action: Paste                            }
  - { key: Copy,                     action: Copy                             }
  - { key: L,         mods: Control, action: ClearLogNotice                   }
  - { key: L,         mods: Control, chars: "\x0c"                            }
  - { key: PageUp,    mods: Shift,   action: ScrollPageUp,   mode: ~Alt       }
  - { key: PageDown,  mods: Shift,   action: ScrollPageDown, mode: ~Alt       }
  - { key: Home,      mods: Shift,   action: ScrollToTop,    mode: ~Alt       }
  - { key: End,       mods: Shift,   action: ScrollToBottom, mode: ~Alt       }


